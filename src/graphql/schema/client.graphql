type Query {
  greeting: String
  allClients: [Client]
  findClientByIdOrEmail(id: ID, email: String): Client
  login(email: String!, password: String!): String!
  regenerateToken(email: String!): Message!
}

type Mutation {
  addClient(client: ClientCreationInput!): Client!
  deleteClientById(id: ID!): Client
  updateClient(client: ClientUpdateInput!): Client!
  signup(client: ClientCreationInput!): String!
  activeAccount(email: String!, otpCode: String!): Boolean
}

type Message {
  code: Int!
  content: String!
  data: [String!]
}

scalar Date

type Client {
  _id: ID
  firstName: String
  lastName: String
  dateOfBirth: Date
  CIN: String
  address: String
  phoneNumber: String
  isActive: Boolean
  age: Int
  email: String
}

input ClientCreationInput {
  firstName: String!
  lastName: String!
  dateOfBirth: Date!
  CIN: String!
  address: String!
  phoneNumber: String!
  age: Int!
  email: String!
  password: String!
  confirmPassword: String!
}

input ClientUpdateInput {
  firstName: String!
  lastName: String!
  dateOfBirth: Date!
  CIN: String!
  address: String!
  phoneNumber: String!
  isActive: Boolean!
  age: Int!
  password: String!
  confirmPassword: String!
}
